
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://qrdulwzjgbfgaplazgsh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFyZHVsd3pqZ2JmZ2FwbGF6Z3NoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4ODAzOTEsImV4cCI6MjA2MzQ1NjM5MX0.1KYtfqg9iKuu9UfSuySWOH7XsCneoDTbnYqg9JqSvjY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    // Disable popup-based authentication to avoid COOP issues
    flowType: 'pkce',
    // Force redirect-based authentication
    debug: process.env.NODE_ENV === 'development',
  },
  global: {
    headers: {
      'x-my-custom-header': 'notes-app',
    },
  },
});

// Add error handling for token refresh failures
supabase.auth.onAuthStateChange((event, session) => {
  if (event === 'TOKEN_REFRESHED' && !session) {
    console.warn('Token refresh failed, session is null');
  }
  
  if (event === 'SIGNED_OUT') {
    console.log('User signed out, clearing local storage');
    // Clear any cached auth data
    localStorage.removeItem('supabase.auth.token');
    localStorage.removeItem('sb-qrdulwzjgbfgaplazgsh-auth-token');
  }
});
